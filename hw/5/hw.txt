1.a. 
50
  20
    10
    40
      30
        25
        35
      45
  60
    xx
    70
      65
      85
        75
        xx

1.b.
50
  10
    xx
    40
      25
        xx
        35
      45
  60
    xx
    70
      65
      85
        75
        xx

1.c. 
in-order: 20 10 40 30 25 35 45 50 60 70 65 85 75
pre-order: 50 20 10 40 30 25 35 45 60 70 65 85 75
post-order: 20 10 40 30 25 35 45 60 70 65 85 75 50

2.a.
6
 4
  1
  3
 5
  2

2.b. 
6 4 5 1 3 2

2.c.
5 4 2 1 3

3.a.
struct Node
{
	int data;
	Node * parent;
	Node * left;
	Node * right;
	Node()
	{
		data = 0;
		parent = left = right = nullptr;
	}
};

3.b.
function insert(root, data):
	node = Node()
	if not root:
		root = node
		return
	else:
		cur = root
		parent = nullptr
		while cur:
			parent = cur
			if node->data <= cur->data:
				cur = cur->left
			else:
				cur = cur->right
		if node->data <= parent->data:
			parent->left = node
		else:
			parent->right = node
		node->parent = parent

4.a.
  A B C D E F G H I
A 0 1 1 0 0 0 0 0 0
B 0 0 0 0 0 0 0 1 0
C 0 0 0 1 1 0 0 0 0
D 0 1 0 0 0 0 0 1 0
E 0 0 0 0 0 0 1 0 0
F 0 0 0 0 0 0 1 0 1
G 0 0 1 0 0 0 0 1 0
H 0 0 0 0 0 0 1 0 0
I 0 0 1 0 0 0 0 0 0

A: B C
B: H
C: D E
D: B H
E: G
F: G I
G: C H
H: G
I: C

4.b.
E G H C D B
E G C D B H
E G C D H B